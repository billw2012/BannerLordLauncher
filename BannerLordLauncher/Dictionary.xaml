<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:BannerLordLauncher.Controls"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:local="clr-namespace:BannerLordLauncher"
                    xmlns:common="clr-namespace:BannerLord.Common;assembly=BannerLord.Common">
    <controls:BoolToVisibleOrHidden x:Key="BoolToVisConverter" Collapse="True" Reverse="False" />
    <controls:BoolToVisibleOrHidden x:Key="BoolToVisConverterInv" Collapse="True" Reverse="True" />
    <SolidColorBrush x:Key="PackIconMaterialForeground1" Color="#c48129"/>
    <LinearGradientBrush x:Key="PackIconMaterialBackground1" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#462e22"/>
        <GradientStop Color="#171211" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PackIconMaterialBackground2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#171211"/>
        <GradientStop Color="#462e22" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PackIconMaterialBorderBrush1" Color="#513a29"/>
    <SolidColorBrush x:Key="PackIconMaterialBorderBrush2" Color="#a96f46"/>
    <SolidColorBrush x:Key="StackPanelBackground1" Color="#17110B"/>
    <SolidColorBrush x:Key="ModListItemCommunity" Color="#be9d81"/>
    <SolidColorBrush x:Key="ModListItemNative" Color="#684d36"/>
    <SolidColorBrush x:Key="ModListCheckEmpty" Color="#231A11" />
    <SolidColorBrush x:Key="TitleButtonInactive" Color="#3e2c20" />
    <SolidColorBrush x:Key="TitleButtonActive" Color="#4e3827" />
    <SolidColorBrush x:Key="TitleButtonPressed" Color="#4e3827" />
    <Style x:Key="MyButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource PackIconMaterialForeground1}" />
        <Setter Property="FontFamily" Value="/Assets/Fonts/#Candara" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Background" Value="{StaticResource PackIconMaterialBackground1}"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="BorderThickness" Value="2,2,2,2"/>
        <Setter Property="BorderBrush" Value="{StaticResource PackIconMaterialBorderBrush1}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Margin="10,10,10,10"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PackIconMaterialBorderBrush2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MoveBtn" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource PackIconMaterialForeground1}" />
        <Setter Property="Background" Value="{StaticResource PackIconMaterialBackground1}"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="BorderThickness" Value="2,2,2,2"/>
        <Setter Property="BorderBrush" Value="{StaticResource PackIconMaterialBorderBrush1}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PackIconMaterialBorderBrush2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ModListCheckbox" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ModListItemCommunity}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid>
                                <iconPacks:PackIconMaterial x:Name="CheckedMark" Focusable="False" Kind="Check" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" TargetName="CheckedMark" Value="{StaticResource ModListItemCommunity}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter Property="Foreground" TargetName="CheckedMark" Value="{StaticResource ModListCheckEmpty}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource PackIconMaterialForeground1}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{StaticResource TitleButtonInactive}"
                        BorderThickness="0"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Focusable="False"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleButtonActive}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleButtonPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource PackIconMaterialForeground1}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{StaticResource TitleButtonInactive}"
                        BorderThickness="0"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Focusable="False"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleButtonActive}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleButtonPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <DataTemplate x:Key="ModListEntry" DataType="common:ModEntry">
        <Grid x:Name="ModListEntryGrid" Margin="0" Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="16" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="16" MaxWidth="16" MinWidth="16" />
                <ColumnDefinition Width="16" MaxWidth="16" MinWidth="16" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="16" MaxWidth="16" MinWidth="16" />
            </Grid.ColumnDefinitions>
            <CheckBox Focusable="False" Grid.Column="0" IsChecked="{Binding IsChecked}" VerticalAlignment="Center" Visibility="{Binding IsCheckboxEnabled, Converter={StaticResource BoolToVisConverter}}" BorderThickness="0" Style="{StaticResource ModListCheckbox}"/>
            <iconPacks:PackIconMaterial  Grid.Column="1" Width="16" Height="16" Focusable="False" Background="Transparent" Foreground="{StaticResource ModListItemNative}" Kind="AccountTie" Visibility="{Binding Module.Official, Converter={StaticResource BoolToVisConverter}}" ToolTip="Official mod"/>
            <iconPacks:PackIconMaterial  Grid.Column="1" Width="16" Height="16" Focusable="False" Background="Transparent" Foreground="{StaticResource ModListItemCommunity}" Kind="AccountGroup" Visibility="{Binding Module.Official, Converter={StaticResource BoolToVisConverterInv}}" ToolTip="Community mod"/>
            <TextBlock Focusable="False" Grid.Column="2" Text="{Binding DisplayName}" Margin="5,0" Foreground="{StaticResource ModListItemCommunity}" FontFamily="/Assets/Fonts/#Candara" FontSize="15" VerticalAlignment="Center"/>
            <TextBlock Focusable="False" Grid.Column="3" Text="{Binding Module.Version}" Margin="5,0" Foreground="{StaticResource ModListItemCommunity}" FontFamily="Consolas" FontSize="15" VerticalAlignment="Center"/>
            <iconPacks:PackIconMaterial Grid.Column="4" Width="16" Height="16" Focusable="False" Background="Transparent" Foreground="{StaticResource ModListItemCommunity}" Kind="AlertCircleOutline" Visibility="{Binding HasConflicts, Converter={StaticResource BoolToVisConverter}}" ToolTip="{Binding Conflicts}"/>
        </Grid>
    </DataTemplate>

    <Style TargetType="Button" x:Key="MsgButton">
        <Setter Property="Margin" Value="6" />
        <Setter Property="Background" Value="{StaticResource PackIconMaterialBackground1}" />
        <Setter Property="BorderBrush" Value="{StaticResource PackIconMaterialBorderBrush1}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Margin="{TemplateBinding Margin}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PackIconMaterialBorderBrush2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>    

    <Style TargetType="TextBlock" x:Key="MsgButtonText">
        <Setter Property="Foreground" Value="{StaticResource PackIconMaterialForeground1}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="10" />
    </Style>
    
    <Style TargetType="ToolTip" BasedOn="{StaticResource {x:Type ToolTip}}">
        <Setter Property="Background" Value="#4e3827" />
        <Setter Property="Foreground" Value="{StaticResource PackIconMaterialForeground1}" />
    </Style>
    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="#a96f46"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#3E271F"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a96f46"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3E271F"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#a96f46"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3E271F"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#a96f46"/>
    <Style x:Key="ModListContainerEntry" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>